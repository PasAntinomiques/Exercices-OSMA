package tabou;
public class ville {
	//liste des coordonnees et non des distances, utiliser les fonctions dessous
	public static int[][] coord = {{6734,1453},
			{2233,10},
			{5530,1424},
			{401,841},
			{3082,1644},
			{7608,4458},
			{7573,3716},
			{7265,1268},
			{6898,1885},
			{1112,2049},
			{5468,2606},
			{5989,2873},
			{4706,2674},
			{4612,2035},
			{6347,2683},
			{6107,669},
			{7611,5184},
			{7462,3590},
			{7732,4723},
			{5900,3561},
			{4483,3369},
			{6101,1110},
			{5199,2182},
			{1633,2809},
			{4307,2322},
			{675,1006},
			{7555,4819},
			{7541,3981},
			{3177,756},
			{7352,4506},
			{7545,2801},
			{3245,3305},
			{6426,3173},
			{4608,1198},
			{23,2216},
			{7248,3779},
			{7762,4595},
			{7392,2244},
			{3484,2829},
			{6271,2135},
			{4985,140},
			{1916,1569},
			{7280,4899},
			{7509,3239},
			{10,2676},
			{6807,2993},
			{5185,3258},
			{3023,1942}};
		

	//cette fonction convertit la liste de coordonnees en une matrice des distances
	// Necessiste un import java.lang.Math; au début du code
	public static int[][] coordToDistance(int[][] coord){
		int[][] distances = new int[coord.length][coord.length];
		for (int i=0;i<coord.length;i++){
			for (int j=0;j<coord.length;j++){
				distances[i][j] =(int) Math.sqrt((Math.pow(coord[i][0]-coord[j][0],2)+(Math.pow(coord[i][1]-coord[j][1],2))));
			}
		}
		return distances;
	}
		
	public static int[][] M = coordToDistance(coord);
	
//	public static int M [][] = { 
//	   {0, 300 ,352 ,466, 217, 238, 431, 336, 451 , 47, 415 ,515},    //Matrice des distances
//	   {300  , 0, 638, 180, 595 ,190, 138, 271, 229, 236, 214 ,393},  //pour aller d'une ville
//	   {352, 638,   0 ,251,  88, 401 ,189, 386, 565, 206, 292, 349},  //à une autre
//	   {466, 180, 251 ,  0, 139, 371, 169, 316, 180, 284, 206, 198},
//	   {217, 595 , 88 ,139  , 0 ,310, 211, 295, 474, 130 ,133, 165},
//	   {238, 190, 401, 371, 310 ,  0 ,202, 122, 378, 157 ,362, 542},
//	   {431 ,138 ,189, 169 ,211, 202 ,  0 ,183,  67, 268, 117, 369},
//	   {336, 271 ,386, 316, 295 ,122, 183 ,  0, 483 ,155, 448, 108},
//	   {451, 229, 565 ,180, 474 ,378 , 67, 483,   0 ,299, 246, 418},
//	   {47 ,236, 206 ,284 ,130, 157 ,268, 155 ,299 ,  0, 202, 327},
//	   {415, 214, 292 ,206, 133, 362 ,117 ,448, 246, 202,   0, 394},
//	   {515, 393, 349, 198, 165, 542, 368, 108, 418, 327, 394,   0}};

//public static int M[][] = {{0,780,320,580,480,660},
//	 					{780,0,700,460,300,200},
//	 					{320,700,0,380,820,630},
//	 					{580,460,380,0,750,310},
//	 					{480,300,820,750,0,500},
//	 					{660,200,630,310,500,0}};

}
